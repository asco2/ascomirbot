import telebot
import config

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/welcome.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üòä–ö–∞–∫ –¥–µ–ª–∞?")
    item2 = types.KeyboardButton("ü§ó–ü–æ–∏—Å–∫ –∞–Ω–∏–º–µ")
    item3 = types.KeyboardButton("–ß–µ–≥–æ —Ö–æ—Ç—è—Ç –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏üë®üèª‚Äçüíª")
    item4 = types.KeyboardButton("–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏")
    markup.add(item1, item2,)
    markup.add(item3,)
    markup.add(item4)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,{0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –≤–∞—à–µ–π —Å–ª—É–≥–æ–π.".format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if  message.text == 'üòä–ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ,—Ö–æ–∑—è–∏–Ω –≤—ã –∫–∞–∫?', reply_markup=markup)

        elif message.text == 'ü§ó–ü–æ–∏—Å–∫ –∞–Ω–∏–º–µ':
            bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ —Å–µ–π—á–∞—Å –Ω–∞–π–¥–µ–º!')            
            markup = types.InlineKeyboardMarkup()
            item1 = btn_my_site = types.InlineKeyboardButton(text='–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤', url='https://yummyanime.club/catalog/item/vtorzhenie-gigantov')
            markup.add(btn_my_site)
            item2 = btn_my_site = types.InlineKeyboardButton(text='–ì–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–µ–Ω—è –Ω–µ—Ç', url='https://yummyanime.club/catalog/item/gorod-v-kotorom-menya-net')
            markup.add(btn_my_site)
            item3 = btn_my_site = types.InlineKeyboardButton(text='–¢–µ—Ç—Ä–∞–¥—å –°–º–µ—Ä—Ç–∏', url='https://yummyanime.club/catalog/item/tetrad-smerti')
            markup.add(btn_my_site)
            item4 = btn_my_site = types.InlineKeyboardButton(text='–í–∞–π–æ–ª–µ—Ç –≠–≤–µ—Ä–≥–∞—Ä–¥–µ–Ω', url='https://yummyanime.club/catalog/item/vajolet-evergarden')
            markup.add(btn_my_site)
            item5 = btn_my_site = types.InlineKeyboardButton(text='–ö–ª–∏–Ω–æ–∫, —Ä–∞—Å—Å–µ–∫–∞—é—â–∏–π –¥–µ–º–æ–Ω–æ–≤', url='https://yummyanime.club/catalog/item/klinok-rassekayushij-demonov')
            markup.add(btn_my_site)
            item6 = btn_my_site = types.InlineKeyboardButton(text='–ù–∞—Ä—É—Ç–æ: –£—Ä–∞–≥–∞–Ω–Ω—ã–µ —Ö—Ä–æ–Ω–∏–∫–∏', url='https://yummyanime.club/catalog/item/naruto-uragannye-hroniki')
            markup.add(btn_my_site)
            item7 = btn_my_site = types.InlineKeyboardButton(text='–ü–∞—Ä–∞–∑–∏—Ç - –£—á–µ–Ω–∏–µ –æ –∂–∏–∑–Ω–∏', url='https://yummyanime.club/catalog/item/parazit-uchenie-o-zhizni')
            markup.add(btn_my_site)
            item8 = btn_my_site = types.InlineKeyboardButton(text='–í–æ–ª–µ–π–±–æ–ª!!', url='https://yummyanime.club/catalog/item/volejbol-tv-1')
            markup.add(btn_my_site)
            item9 = btn_my_site = types.InlineKeyboardButton(text='–†–µ–∑–æ–Ω–∞–Ω—Å –£–∂–∞—Å–∞', url='https://yummyanime.club/catalog/item/rezonans-uzhasa')
            markup.add(btn_my_site)
            item10 = btn_my_site = types.InlineKeyboardButton(text='–í–ª–∞–¥—ã–∫–∞', url='https://yummyanime.club/catalog/item/vladyka')
            markup.add(btn_my_site)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∞–Ω–∏–º–µ —Ö–æ–∑—è–∏–Ω", reply_markup = markup)

        
        elif message.text == '–ß–µ–≥–æ —Ö–æ—Ç—è—Ç –º–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏üë®üèª‚Äçüíª':
            sti = open('static/Anime.tgs', 'rb')
            bot.send_sticker(message.chat.id, sti) 
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton("100", callback_data='good1')
            item2 = types.InlineKeyboardButton("50", callback_data='not bad')
            item3 = types.InlineKeyboardButton("0", callback_data='bad2')

            markup.add(item1, item2, item3,)

            bot.send_message(message.chat.id, "–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ —Ö–æ—Ç—è—Ç —á—Ç–æ –±—ã –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∏–º —Ö–æ—Ä–æ—à—É—é –æ—Ü–µ–Ω–∫—É", reply_markup = markup)

        elif message.text == '–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = btn_my_site = types.InlineKeyboardButton(text='Askhat', url='https://t.me/soupmas')
            markup.add(btn_my_site)
            item2 = btn_my_site = types.InlineKeyboardButton(text='Miras', url='https://t.me/miras2210')
            markup.add(btn_my_site)
            bot.send_message(message.chat.id, "–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–∏ –≤–ª–æ–∂–∏–ª–∏ –º–Ω–µ –¥—É—à—É‚ù§", reply_markup = markup)
        else:
            bot.send_message(message.chat.id,'–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å —Ö–æ–∑—è–∏–Ω üò¢')
    
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'good1':
                bot.send_message(call.message.chat.id, 'Wow —Å–ø–∞—Å–∏–±–æ senpai')
                sti = open('static/100.tgs', 'rb')
                bot.send_sticker(call.message.chat.id, sti)
            elif call.data == 'not bad':
                bot.send_message(call.message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ —â–µ–¥—Ä—É—é –æ—Ü–µ–Ω–∫—É')
                sti = open('static/Ani.tgs', 'rb')
                bot.send_sticker(call.message.chat.id, sti)
            elif call.data == 'bad2':
                bot.send_message(call.message.chat.id, '–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —É–ª—É—á—à–∏—Ç—å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!')
                sti = open('static/Ar.tgs', 'rb')
                bot.send_sticker(call.message.chat.id, sti)

    except Exception as e:
        print(repr(e))
 
# RUN
bot.polling(none_stop=True)
